/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import model.Account;
import model.ChatLog;
import model.Message;
import model.Room;

/**
 *
 * @author Cuong
 */
public class ChatRoomView extends javax.swing.JFrame {

    /**
     * Creates new form ChatRoomView
     */
    private Client controller;
    private Account sender;
    private Room room;
    private ChatLog chatlog = new ChatLog();

    public ChatRoomView() {
        initComponents();
        this.setVisible(true);
    }
    
    public ChatRoomView(Client controller, Account acc, Room r) {
        initComponents();
        this.setVisible(true);
        this.setTitle(r.getName());
        this.controller = controller;
        this.sender = acc;
        this.room = r;
        jLabel1.setText("Phòng chat " + r.getName());
        jLabel2.setText("Tài khoản: " + sender.getUsername());
        setMemberList();
    }

    public void loadChatLog(ChatLog chatlog){
        this.chatlog = chatlog;
        for(Message msg : chatlog.getChatlog()){
            if(msg.getSender().getId() == sender.getId()){
                appendToPane("Bạn: " + msg.getContent() + "\n", Color.blue, StyleConstants.ALIGN_JUSTIFIED);
            } else if(msg.getSender().getId() == 0){
                appendToPane(msg.getContent() + "\n", Color.red, StyleConstants.ALIGN_CENTER);
            }else 
                appendToPane(msg.getSender().getUsername() + ": " + msg.getContent() + "\n", Color.black, StyleConstants.ALIGN_JUSTIFIED);
        }
    }
    
    public void addMess(Message msg){
        if(msg.getSender().getId() == 0)
            appendToPane(msg.getContent() + "\n", Color.red, StyleConstants.ALIGN_CENTER);
        else
            appendToPane(msg.getSender().getUsername() + ": " + msg.getContent() + "\n", Color.black, StyleConstants.ALIGN_JUSTIFIED);
    }
    
    public String getMes(){
        return input.getText();
    }
    
    public void refreshRoom(Room r){
        this.room = r;
        setMemberList();
    }
    
    public void setMemberList(){
        List<Account> list = room.getMember();
        memberList.removeAll();
        DefaultListModel model = new DefaultListModel();
        for(int i=0; i<list.size();i++)
            model.addElement(list.get(i).getUsername());
        memberList.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        memberList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatPane = new javax.swing.JTextPane();
        input = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        addMemMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        delMemMenu = new javax.swing.JMenuItem();
        leaveMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jScrollPane2.setViewportView(memberList);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("jLabel1");

        jButton1.setText("Gửi file");

        jScrollPane1.setViewportView(chatPane);

        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputKeyPressed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        addMemMenu.setText("Cài đặt");
        addMemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemMenuActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Thêm mới");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        addMemMenu.add(jMenuItem1);

        delMemMenu.setText("Xóa thành viên");
        delMemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMemMenuActionPerformed(evt);
            }
        });
        addMemMenu.add(delMemMenu);

        leaveMenu.setText("Rời khỏi cuộc trò chuyện");
        leaveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveMenuActionPerformed(evt);
            }
        });
        addMemMenu.add(leaveMenu);

        jMenuBar1.add(addMemMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                            .addComponent(input)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(169, 169, 169)
                        .addComponent(jLabel1)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void appendToPane(String msg, Color c, int constant){
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);
        
        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, constant); 
        
        int len = chatPane.getDocument().getLength();
        chatPane.setCaretPosition(len);
        chatPane.setCharacterAttributes(aset, false);
        chatPane.replaceSelection(msg);
    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String name = showAddMember(controller.getFrList());
        controller.addMember(name, room);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputActionPerformed

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String content = getMes();
            if(!content.isEmpty()){
                appendToPane("Bạn: " + content + "\n", Color.blue, StyleConstants.ALIGN_RIGHT);
                input.setText("");
                LocalDateTime datetime = LocalDateTime.now();
                Message message = new Message(sender, room, content, datetime);
                controller.sendToRoom(message);
            }
        }
    }//GEN-LAST:event_inputKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        controller.closeChatRoom(room);
        dispose();
    }//GEN-LAST:event_formWindowClosed

    private void delMemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMemMenuActionPerformed
        // TODO add your handling code here:
        String name = showKickMember(room.getMember());
        controller.kickMember(name, room);
    }//GEN-LAST:event_delMemMenuActionPerformed

    private void leaveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveMenuActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Bạn muốn rời phòng?", "Cảnh báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null);
        if(i == 0)
            controller.leaveRoom(room);
    }//GEN-LAST:event_leaveMenuActionPerformed

    private void addMemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMemMenuActionPerformed

    public String showAddMember(List<Account> frList){         
        for(Account mem:room.getMember())
            for(Account fr:frList)
                if(mem.getUsername() == fr.getUsername())
                    frList.remove(fr);
        List<String> frNameList = new ArrayList<>();
        for(Account acc:frList)
            frNameList.add(acc.getUsername());
        return (String) JOptionPane.showInputDialog(null, "Hãy chọn một người", "Thêm thành viên",
                JOptionPane.QUESTION_MESSAGE, null, frNameList.toArray(), "");
    }
    
    public String showKickMember(List<Account> list){         
        return (String) JOptionPane.showInputDialog(null, "Hãy chọn một người", "Xóa thành viên",
                JOptionPane.QUESTION_MESSAGE, null, list.toArray(), "");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        new ChatRoomView();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu addMemMenu;
    private javax.swing.JTextPane chatPane;
    private javax.swing.JMenuItem delMemMenu;
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem leaveMenu;
    private javax.swing.JList<String> memberList;
    // End of variables declaration//GEN-END:variables
}
