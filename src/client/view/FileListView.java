/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

import client.control.Client;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Account;
import model.FileInfo;
import model.Room;

/**
 *
 * @author Cuong
 */
public class FileListView extends javax.swing.JFrame {

    private List<FileInfo> list;
    private String saveDIR = "C:\\Users\\Cuong\\Documents\\NetBeansProjects\\Clone chat\\Chat_v1.1\\src\\client\\FileStorage\\";
    private Client controller;
    private Account sender;
    private Room room;
    /**
     * Creates new form FileList
     */
    public FileListView(Client controller, List<FileInfo> list, Account sender) {
        initComponents();
        this.setVisible(true);
        this.controller = controller;
        this.list = list;
        this.sender = sender;
        if(list != null)
            setFiles(list);
        setTitle("File được gửi bởi " + this.sender.getUsername());
    }

    public FileListView(Client controller, List<FileInfo> list, Room room) {
        initComponents();
        this.setVisible(true);
        this.controller = controller;
        this.list = list;
        this.room = room;
        if(list != null)
            setFiles(list);
        setTitle("File được gửi trong nhóm " + this.room.getName());
    }
    
    public void setFiles(List<FileInfo> list){
        jList1.removeAll();
        DefaultListModel model = new DefaultListModel();       
        if(list != null){
            for(FileInfo f:list){
                model.addElement(f.getName());
            }
        }
        jList1.setModel(model);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        download = new javax.swing.JButton();
        openFolder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        download.setText("Tải");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        openFolder.setText("Mở folder chứa file");
        openFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(openFolder)
                    .addComponent(download, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(download)
                        .addGap(18, 18, 18)
                        .addComponent(openFolder)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
        String filename = jList1.getSelectedValue();
        if(filename != null){
            for(FileInfo f:list){
                if(f.getName().equals(filename)){
                    controller.fileHandler.download(f);
                }
            }
        }       
    }//GEN-LAST:event_downloadActionPerformed

    private void openFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFolderActionPerformed
        try {
            // TODO add your handling code here:
            Desktop.getDesktop().open(new File(saveDIR));
        } catch (IOException ex) {
            Logger.getLogger(FileListView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_openFolderActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(sender != null)
            controller.fileHandler.closeFileList(sender);
        else if(room != null)
            controller.fileHandler.closeFileList(room);
        dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    
    public void showMessage(String s){
        JOptionPane.showMessageDialog(this, s);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton download;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton openFolder;
    // End of variables declaration//GEN-END:variables
}
